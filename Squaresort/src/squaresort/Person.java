package squaresort;
import java.util.Random;
/**
 * 
 * @author Joo-nam Kim
 *
 */
class Person {
    static int id = 0;
    static Random rand = new java.util.Random();
    public final String givenName;
    public final String surname;
    public final int employeeId;
    public final int payGrade;
    
    // Names generated by http://random-name-generator.info/
    private String[] givenNames = new String[] {
        "Ada", "Albert", "Alexandra", "Alfredo", "Allen", "Andre", "Angelica",
        "Anna", "Anthony", "Antonio", "Ashley", "Audrey", "Beatrice",
        "Benjamin", "Billy", "Bobby", "Bradley", "Bryant", "Candace",
        "Carole", "Carrie", "Claire", "Clifford", "Clint", "Clyde", "Cory",
        "Dale", "Danielle", "Daryl", "Delia", "Devin", "Douglas", "Eddie",
        "Ella", "Erica", "Erika", "Eva", "Frank", "Gayle", "George", "Georgia",
        "Geraldine", "Gina", "Gwen", "Hector", "Homer", "Irene", "James",
        "Jamie", "Jeremiah", "Joann", "Josefina", "Juan", "Karen", "Kenneth",
        "Laurie", "Lee", "Leland", "Leroy", "Levi", "Lewis", "Lillian",
        "Lillie", "Lorenzo", "Louise", "Lucas", "Lynn", "Marc", "Marcella",
        "Marlon", "Marvin", "Micheal", "Miranda", "Miriam", "Misty", "Naomi",
        "Natasha", "Nelson", "Oliver", "Pete", "Rafael", "Randall", "Raul",
        "Rebecca", "Reginald", "Roger", "Ruby", "Rufus", "Sabrina", "Sean",
        "Steven", "Stuart", "Terence", "Terry", "Van", "Velma", "Vincent",
        "Wanda", "Willard", "Winifred"
    };
    private String[] surnames = new String[] {
        "Adkins", "Aguilar", "Anderson", "Armstrong", "Arnold", "Bailey",
        "Banks", "Barrett", "Bates", "Bennett", "Bowers", "Bradley", "Brown",
        "Bryant", "Buchanan", "Bush", "Butler", "Cain", "Carlson", "Carroll",
        "Cummings", "Diaz", "Doyle", "Duncan", "Dunn", "Fernandez", "Foster",
        "Fowler", "Fox", "Francis", "French", "Garrett", "Gill", "Glover",
        "Goodwin", "Gordon", "Grant", "Griffin", "Gross", "Guerrero", "Hale",
        "Harvey", "Holland", "Ingram", "Jacobs", "James", "Lamb", "Lowe",
        "Lucas", "Mann", "Marshall", "Martin", "Martinez", "May", "Mcdaniel",
        "Mendoza", "Meyer", "Moody", "Moreno", "Nelson", "Nichols", "Norton",
        "Obrien", "Osborne", "Padilla", "Page", "Parks", "Parsons", "Payne",
        "Pearson", "Powell", "Reese", "Reeves", "Reyes", "Reynolds",
        "Richardson", "Rios", "Ross", "Russell", "Saunders", "Sharp", "Simon",
        "Smith", "Steele", "Stephens", "Stokes", "Summers", "Thomas",
        "Thompson", "Tyler", "Wagner", "Ward", "Washington", "Watkins",
        "Watson", "Weber", "West", "Willis", "Young", "Zimmerman"
    };
    
    Person() {
        givenName = randomChoice(givenNames);
        surname = randomChoice(surnames);
        id += 1;
        employeeId = id;
        payGrade = rand.nextInt(25) + 1;
    }
    
    Person(String givenName, String surname, int payGrade) {
        assert givenName != null && givenName.length() > 0;
        assert surname != null && surname.length() > 0;
        assert 0 < payGrade && payGrade <= 25;
        this.givenName = givenName;
        this.surname = surname;
        this.payGrade = payGrade;
        id += 1;
        employeeId = id;
    }

    private String randomChoice(String[] names) {
        return names[rand.nextInt(names.length)];
    }
    
    @Override
    public String toString() {
        return String.format("Employee #%04d, pay grade %2d: %s %s",
                             employeeId, payGrade, givenName, surname);
    }
    
    @Override
    public boolean equals(Object o) {
        if (o instanceof Person) {
            return ((Person)o).employeeId == this.employeeId;
        }
        return false;
    }
    
    @Override
    public int hashCode() {
        return employeeId;
    }
}